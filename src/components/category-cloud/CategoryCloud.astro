---
import { getRelativeLocaleUrl } from "astro:i18n";

// components
import CategoryBadge from "@components/category/CategoryBadge.astro";

// utils
import { getAllPosts, countItems, sortByValue } from "@js/blogUtils";
import { categorify, humanize } from "@js/textUtils";
import { getLocaleFromUrl } from "@js/localeUtils";

const currLocale = getLocaleFromUrl(Astro.url);

const posts = await getAllPosts(currLocale);
const allCategories = posts.map((post) => post.data.categories).flat();
const filteredCategories = allCategories.filter(
	(category): category is string => typeof category === "string",
);
const countedCategories = countItems(filteredCategories);
const processedCategories = sortByValue(countedCategories);

interface Props {
	showCount?: boolean;
	class?: string;
}

const { showCount = false, class: className } = Astro.props as Props;
---

<div class:list={["flex flex-wrap gap-3", className]} data-pagefind-ignore>
	{
		processedCategories.map(([category, count]) => (
			<CategoryBadge category={category} count={showCount ? count : undefined} />
		))
	}
</div>
